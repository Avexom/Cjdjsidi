from datetime import datetime
from string import Template

class Texts:
    START_NOT_CONNECTED = "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±—É–¥—É —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –≤ —á–∞—Ç–∞—Ö."
    START_CONNECTED = "‚úÖ –ë–æ—Ç —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
    START_CONNECTED_NEW = "‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
    SUBSCRIPTION_BUY_ALREADY_ACTIVE = "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!"
    CONNECTION_ENABLED = "‚úÖ <b>–ë–∏–∑–Ω–µ—Å-–±–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>"
    CONNECTION_DISABLED = "‚ùå <b>–ë–∏–∑–Ω–µ—Å-–±–æ—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.</b>"
    SUBSCRIPTION_ENDED = "‚è∞ <b>–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞, –±–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω.</b>"
    SUBSCRIPTION_BUY_FAILED = "‚ùå <b>–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</b>"
    SUBSCRIPTION_BUY_SUCCESS = "‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!"
    SUBSCRIPTION_BUY_SUCCESS_TEXT = "üéâ <b>–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!</b> –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ 30 –¥–Ω–µ–π."

    ABOUT_BOT = """
    üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>

    <b>–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏. 
    –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π, —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.</b>

    <b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
    - –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ–æ–±—â–µ–Ω–∏–π
    - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
    - –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    - –£–¥–æ–±–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏

    <b>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –±–æ—Ç–∞ –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É –∏ –Ω–∞—á–Ω–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏!</b>
    """

    @staticmethod
    def subscription_buy_text(price: str) -> str:
        return f"üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: {price} RUB"

    profile_template = Template("""
üëæ <b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> $first_name
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
ü™™ <b>ID:</b> $user_id
    
‚è≥ <b>–ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ:</b> $subscription_status
    
üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:</b>
üì® –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: $count_messages
üóë –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö: $count_messages_deleted
‚úèÔ∏è –ò–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: $count_messages_edited

üí´ –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å! 
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
""")

    @staticmethod
    def profile_text(user_id: int, first_name: str, subscription_end_date: datetime | None,
                    count_messages: int, count_messages_deleted: int, count_messages_edited: int) -> str:
        subscription_status = (
            subscription_end_date.strftime('%d.%m.%Y') if subscription_end_date else "–ù–µ –∞–∫—Ç–∏–≤–Ω–∞"
        )
        return Texts.profile_template.substitute(
            first_name=first_name,
            user_id=user_id,
            subscription_status=subscription_status,
            count_messages=count_messages,
            count_messages_deleted=count_messages_deleted,
            count_messages_edited=count_messages_edited,
        )

    @staticmethod
    def generate_user_link(name: str, user_id: int, username: str | None) -> str:
        url = f'tg://openmessage?user_id={user_id}' if username is None else f'https://t.me/{username}'
        return f'<a href="{url}">{name}</a>'

    @staticmethod
    def new_message_text(name: str, user_id: int, username: str | None) -> str:
        user_link = f'<a href="tg://user?id={user_id}">{name}</a>'
        return f"üì® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏\n–û—Ç: {user_link}"

    @staticmethod
    def new_message_text_2(name: str, user_id: int, username: str | None) -> str:
        user_link = f'<a href="tg://user?id={user_id}">{name}</a>'
        return f"üì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\nüë§ –û—Ç: {user_link}"

    @staticmethod
    def deleted_message_text(name: str, user_id: int, username: str | None, deleted_text: str = "") -> str:
        user_link = f'<a href="tg://user?id={user_id}">{name}</a>'
        current_time = datetime.now().strftime("%H:%M:%S")
        return f"""üóë {user_link} —É–¥–∞–ª–∏–ª –¥–ª—è —Ç–µ–±—è —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n–£–¥–∞–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{deleted_text}\n\n‚è∞ –í—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è: {current_time}"""

    @staticmethod
    def edited_message_text(name: str, user_id: int, username: str | None) -> str:
        user_link = Texts.generate_user_link(name, user_id, username)
        return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_link} –∏–∑–º–µ–Ω–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ"

    @staticmethod
    def generate_message_text(name: str, user_id: int, username: str | None, action: str) -> str:
        user_link = Texts.generate_user_link(name, user_id, username)
        if action == "new":
            return f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_link}"
        elif action == "new_alt":
            return f"üëá –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_link} üëá"
        elif action == "edited":
            return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_link} –∏–∑–º–µ–Ω–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ"
        elif action == "deleted":
            return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_link} —É–¥–∞–ª–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ"
        else:
            raise ValueError("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è")