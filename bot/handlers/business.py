
import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command

from bot.database import database as db
from bot.keyboards import user as kb

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏
business_router = Router()
logger = logging.getLogger(__name__)

@business_router.message(F.text == "üéÆ –ú–æ–¥—É–ª–∏")
async def handle_business_modules(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –±–∏–∑–Ω–µ—Å-–±–æ—Ç–∞."""
    try:
        user = await db.get_user(message.from_user.id)
        if not user:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        if not user.has_active_subscription:
            await message.answer("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª–µ–π")
            return

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
        modules_state = {
            'modules': user.module_calc_enabled and user.module_love_enabled
        }
        
        await message.answer(
            f"üéÆ –ú–æ–¥—É–ª–∏: {'‚úÖ' if modules_state['modules'] else '‚ùå'}\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ –º–æ–¥—É–ª—è–º–∏",
            reply_markup=kb.get_modules_keyboard(modules_state)
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–æ–¥—É–ª–µ–π: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–æ–¥—É–ª–µ–π")
